
# Prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix

set -sg escape-time 0
set-option -g display-time 4000
set-option -g mouse on
bind C-r source ~/.config/tmux/tmux.conf \; display "~/.config/tmux/tmux.conf"

# Sessions
set-option -g detach-on-destroy no-detached
bind 'n' run-shell "~/dev/scripts/sh/tmux_new_session.sh"

# Windows
bind -n M-L next-window
bind -n M-H previous-window
bind '%' split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Panes
set -g pane-active-border-style fg=default,bg=default
set -g pane-border-style fg=color0,bg=default
bind m command-prompt -p man: "split-window -h 'man %1'"
# Smart pane switching with awareness of Vim splits. See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Status
set -g status-style 'bg=default fg=white'
set -g status-position top
set -g status-justify right
set -g status-left-length 20
set -g status-left '#[bg=blue,fg=black] #S.#I.#P '
set -g status-right-length 0
set -g status-right ''
#set -g status-right '#[fg=black,bg=yellow] %Y-%m-%d #[fg=black,bg=green] %H:%M '
set -g status-keys vi
set -ga terminal-overrides ",alacritty:RGB"
set -as terminal-overrides ",alacritty:Tc"
set -as terminal-overrides ",*:U8=0"
set-option -g focus-events on

